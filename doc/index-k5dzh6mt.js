function e(){return{async:!1,breaks:!1,extensions:null,gfm:!0,hooks:null,pedantic:!1,renderer:null,silent:!1,tokenizer:null,walkTokens:null}}var v=e();function Ay(y){v=y}var T={exec:()=>null};function w(y,p=""){let i=typeof y==="string"?y:y.source,a={replace:(g,u)=>{let f=typeof u==="string"?u:u.source;return f=f.replace(O.caret,"$1"),i=i.replace(g,f),a},getRegex:()=>{return new RegExp(i,p)}};return a}var O={codeRemoveIndent:/^(?: {1,4}| {0,3}\t)/gm,outputLinkReplace:/\\([\[\]])/g,indentCodeCompensation:/^(\s+)(?:```)/,beginningSpace:/^\s+/,endingHash:/#$/,startingSpaceChar:/^ /,endingSpaceChar:/ $/,nonSpaceChar:/[^ ]/,newLineCharGlobal:/\n/g,tabCharGlobal:/\t/g,multipleSpaceGlobal:/\s+/g,blankLine:/^[ \t]*$/,doubleBlankLine:/\n[ \t]*\n[ \t]*$/,blockquoteStart:/^ {0,3}>/,blockquoteSetextReplace:/\n {0,3}((?:=+|-+) *)(?=\n|$)/g,blockquoteSetextReplace2:/^ {0,3}>[ \t]?/gm,listReplaceTabs:/^\t+/,listReplaceNesting:/^ {1,4}(?=( {4})*[^ ])/g,listIsTask:/^\[[ xX]\] /,listReplaceTask:/^\[[ xX]\] +/,anyLine:/\n.*\n/,hrefBrackets:/^<(.*)>$/,tableDelimiter:/[:|]/,tableAlignChars:/^\||\| *$/g,tableRowBlankLine:/\n[ \t]*$/,tableAlignRight:/^ *-+: *$/,tableAlignCenter:/^ *:-+: *$/,tableAlignLeft:/^ *:-+ *$/,startATag:/^<a /i,endATag:/^<\/a>/i,startPreScriptTag:/^<(pre|code|kbd|script)(\s|>)/i,endPreScriptTag:/^<\/(pre|code|kbd|script)(\s|>)/i,startAngleBracket:/^</,endAngleBracket:/>$/,pedanticHrefTitle:/^([^'"]*[^\s])\s+(['"])(.*)\2/,unicodeAlphaNumeric:/[\p{L}\p{N}]/u,escapeTest:/[&<>"']/,escapeReplace:/[&<>"']/g,escapeTestNoEncode:/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,escapeReplaceNoEncode:/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/g,unescapeTest:/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig,caret:/(^|[^\[])\^/g,percentDecode:/%25/g,findPipe:/\|/g,splitPipe:/ \|/,slashPipe:/\\\|/g,carriageReturn:/\r\n|\r/g,spaceLine:/^ +$/gm,notSpaceStart:/^\S*/,endingNewline:/\n$/,listItemRegex:(y)=>new RegExp(`^( {0,3}${y})((?:[	 ][^\\n]*)?(?:\\n|$))`),nextBulletRegex:(y)=>new RegExp(`^ {0,${Math.min(3,y-1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ 	][^\\n]*)?(?:\\n|$))`),hrRegex:(y)=>new RegExp(`^ {0,${Math.min(3,y-1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`),fencesBeginRegex:(y)=>new RegExp(`^ {0,${Math.min(3,y-1)}}(?:\`\`\`|~~~)`),headingBeginRegex:(y)=>new RegExp(`^ {0,${Math.min(3,y-1)}}#`),htmlBeginRegex:(y)=>new RegExp(`^ {0,${Math.min(3,y-1)}}<(?:[a-z].*>|!--)`,"i")},Wy=/^(?:[ \t]*(?:\n|$))+/,Dy=/^((?: {4}| {0,3}\t)[^\n]+(?:\n(?:[ \t]*(?:\n|$))*)?)+/,Yy=/^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/,G=/^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,Gy=/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,m=/(?:[*+-]|\d{1,9}[.)])/,hy=/^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\n(?!\s*?\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\n {0,3}(=+|-+) *(?:\n+|$)/,ly=w(hy).replace(/bull/g,m).replace(/blockCode/g,/(?: {4}| {0,3}\t)/).replace(/fences/g,/ {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g,/ {0,3}>/).replace(/heading/g,/ {0,3}#{1,6}/).replace(/html/g,/ {0,3}<[^\n>]+>\n/).replace(/\|table/g,"").getRegex(),oy=w(hy).replace(/bull/g,m).replace(/blockCode/g,/(?: {4}| {0,3}\t)/).replace(/fences/g,/ {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g,/ {0,3}>/).replace(/heading/g,/ {0,3}#{1,6}/).replace(/html/g,/ {0,3}<[^\n>]+>\n/).replace(/table/g,/ {0,3}\|?(?:[:\- ]*\|)+[\:\- ]*\n/).getRegex(),L=/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,Xy=/^[^\n]+/,t=/(?!\s*\])(?:\\.|[^\[\]\\])+/,Qy=w(/^ {0,3}\[(label)\]: *(?:\n[ \t]*)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n[ \t]*)?| *\n[ \t]*)(title))? *(?:\n+|$)/).replace("label",t).replace("title",/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/).getRegex(),Zy=w(/^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/).replace(/bull/g,m).getRegex(),Q="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",_=/<!--(?:-?>|[\s\S]*?(?:-->|$))/,zy=w("^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n[ \t]*)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ \t]*)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ 	]*)+\\n|$))","i").replace("comment",_).replace("tag",Q).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),Ey=w(L).replace("hr",G).replace("heading"," {0,3}#{1,6}(?:\\s|$)").replace("|lheading","").replace("|table","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",Q).getRegex(),By=w(/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/).replace("paragraph",Ey).getRegex(),x={blockquote:By,code:Dy,def:Qy,fences:Yy,heading:Gy,hr:G,html:zy,lheading:ly,list:Zy,newline:Wy,paragraph:Ey,table:T,text:Xy},uy=w("^ *([^\\n ].*)\\n {0,3}((?:\\| *)?:?-+:? *(?:\\| *:?-+:? *)*(?:\\| *)?)(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)").replace("hr",G).replace("heading"," {0,3}#{1,6}(?:\\s|$)").replace("blockquote"," {0,3}>").replace("code","(?: {4}| {0,3}	)[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",Q).getRegex(),Iy={...x,lheading:oy,table:uy,paragraph:w(L).replace("hr",G).replace("heading"," {0,3}#{1,6}(?:\\s|$)").replace("|lheading","").replace("table",uy).replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",Q).getRegex()},Cy={...x,html:w(`^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`).replace("comment",_).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:T,lheading:/^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,paragraph:w(L).replace("hr",G).replace("heading",` *#{1,6} *[^
]`).replace("lheading",ly).replace("|table","").replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").replace("|tag","").getRegex()},ey=/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,my=/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,Ny=/^( {2,}|\\)\n(?!\s*$)/,Ly=/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,Z=/[\p{P}\p{S}]/u,r=/[\s\p{P}\p{S}]/u,wy=/[^\s\p{P}\p{S}]/u,ty=w(/^((?![*_])punctSpace)/,"u").replace(/punctSpace/g,r).getRegex(),qy=/(?!~)[\p{P}\p{S}]/u,_y=/(?!~)[\s\p{P}\p{S}]/u,xy=/(?:[^\s\p{P}\p{S}]|~)/u,ry=/\[[^[\]]*?\]\((?:\\.|[^\\\(\)]|\((?:\\.|[^\\\(\)])*\))*\)|`[^`]*?`|<[^<>]*?>/g,Hy=/^(?:\*+(?:((?!\*)punct)|[^\s*]))|^_+(?:((?!_)punct)|([^\s_]))/,cy=w(Hy,"u").replace(/punct/g,Z).getRegex(),sy=w(Hy,"u").replace(/punct/g,qy).getRegex(),Oy="^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\*)punct(\\*+)(?=[\\s]|$)|notPunctSpace(\\*+)(?!\\*)(?=punctSpace|$)|(?!\\*)punctSpace(\\*+)(?=notPunctSpace)|[\\s](\\*+)(?!\\*)(?=punct)|(?!\\*)punct(\\*+)(?!\\*)(?=punct)|notPunctSpace(\\*+)(?=notPunctSpace)",ny=w(Oy,"gu").replace(/notPunctSpace/g,wy).replace(/punctSpace/g,r).replace(/punct/g,Z).getRegex(),ky=w(Oy,"gu").replace(/notPunctSpace/g,xy).replace(/punctSpace/g,_y).replace(/punct/g,qy).getRegex(),yp=w("^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|(?!_)punct(_+)(?=[\\s]|$)|notPunctSpace(_+)(?!_)(?=punctSpace|$)|(?!_)punctSpace(_+)(?=notPunctSpace)|[\\s](_+)(?!_)(?=punct)|(?!_)punct(_+)(?!_)(?=punct)","gu").replace(/notPunctSpace/g,wy).replace(/punctSpace/g,r).replace(/punct/g,Z).getRegex(),pp=w(/\\(punct)/,"gu").replace(/punct/g,Z).getRegex(),ap=w(/^<(scheme:[^\s\x00-\x1f<>]*|email)>/).replace("scheme",/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/).replace("email",/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/).getRegex(),ip=w(_).replace("(?:-->|$)","-->").getRegex(),up=w("^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>").replace("comment",ip).replace("attribute",/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/).getRegex(),X=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,gp=w(/^!?\[(label)\]\(\s*(href)(?:(?:[ \t]*(?:\n[ \t]*)?)(title))?\s*\)/).replace("label",X).replace("href",/<(?:\\.|[^\n<>\\])+>|[^ \t\n\x00-\x1f]*/).replace("title",/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/).getRegex(),Py=w(/^!?\[(label)\]\[(ref)\]/).replace("label",X).replace("ref",t).getRegex(),My=w(/^!?\[(ref)\](?:\[\])?/).replace("ref",t).getRegex(),fp=w("reflink|nolink(?!\\()","g").replace("reflink",Py).replace("nolink",My).getRegex(),c={_backpedal:T,anyPunctuation:pp,autolink:ap,blockSkip:ry,br:Ny,code:my,del:T,emStrongLDelim:cy,emStrongRDelimAst:ny,emStrongRDelimUnd:yp,escape:ey,link:gp,nolink:My,punctuation:ty,reflink:Py,reflinkSearch:fp,tag:up,text:Ly,url:T},dp={...c,link:w(/^!?\[(label)\]\((.*?)\)/).replace("label",X).getRegex(),reflink:w(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",X).getRegex()},C={...c,emStrongRDelimAst:ky,emStrongLDelim:sy,url:w(/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,"i").replace("email",/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/).getRegex(),_backpedal:/(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])((?:\\.|[^\\])*?(?:\\.|[^\s~\\]))\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/},bp={...C,br:w(Ny).replace("{2,}","*").getRegex(),text:w(C.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()},o={normal:x,gfm:Iy,pedantic:Cy},J={normal:c,gfm:C,breaks:bp,pedantic:dp},Ap={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},gy=(y)=>Ap[y];function j(y,p){if(p){if(O.escapeTest.test(y))return y.replace(O.escapeReplace,gy)}else if(O.escapeTestNoEncode.test(y))return y.replace(O.escapeReplaceNoEncode,gy);return y}function fy(y){try{y=encodeURI(y).replace(O.percentDecode,"%")}catch{return null}return y}function dy(y,p){let i=y.replace(O.findPipe,(u,f,d)=>{let b=!1,A=f;while(--A>=0&&d[A]==="\\")b=!b;if(b)return"|";else return" |"}),a=i.split(O.splitPipe),g=0;if(!a[0].trim())a.shift();if(a.length>0&&!a.at(-1)?.trim())a.pop();if(p)if(a.length>p)a.splice(p);else while(a.length<p)a.push("");for(;g<a.length;g++)a[g]=a[g].trim().replace(O.slashPipe,"|");return a}function V(y,p,i){let a=y.length;if(a===0)return"";let g=0;while(g<a)if(y.charAt(a-g-1)===p)g++;else break;return y.slice(0,a-g)}function hp(y,p){if(y.indexOf(p[1])===-1)return-1;let i=0;for(let a=0;a<y.length;a++)if(y[a]==="\\")a++;else if(y[a]===p[0])i++;else if(y[a]===p[1]){if(i--,i<0)return a}if(i>0)return-2;return-1}function by(y,p,i,a,g){let u=p.href,f=p.title||null,d=y[1].replace(g.other.outputLinkReplace,"$1");a.state.inLink=!0;let b={type:y[0].charAt(0)==="!"?"image":"link",raw:i,href:u,title:f,text:d,tokens:a.inlineTokens(d)};return a.state.inLink=!1,b}function lp(y,p,i){let a=y.match(i.other.indentCodeCompensation);if(a===null)return p;let g=a[1];return p.split(`
`).map((u)=>{let f=u.match(i.other.beginningSpace);if(f===null)return u;let[d]=f;if(d.length>=g.length)return u.slice(g.length);return u}).join(`
`)}class D{options;rules;lexer;constructor(y){this.options=y||v}space(y){let p=this.rules.block.newline.exec(y);if(p&&p[0].length>0)return{type:"space",raw:p[0]}}code(y){let p=this.rules.block.code.exec(y);if(p){let i=p[0].replace(this.rules.other.codeRemoveIndent,"");return{type:"code",raw:p[0],codeBlockStyle:"indented",text:!this.options.pedantic?V(i,`
`):i}}}fences(y){let p=this.rules.block.fences.exec(y);if(p){let i=p[0],a=lp(i,p[3]||"",this.rules);return{type:"code",raw:i,lang:p[2]?p[2].trim().replace(this.rules.inline.anyPunctuation,"$1"):p[2],text:a}}}heading(y){let p=this.rules.block.heading.exec(y);if(p){let i=p[2].trim();if(this.rules.other.endingHash.test(i)){let a=V(i,"#");if(this.options.pedantic)i=a.trim();else if(!a||this.rules.other.endingSpaceChar.test(a))i=a.trim()}return{type:"heading",raw:p[0],depth:p[1].length,text:i,tokens:this.lexer.inline(i)}}}hr(y){let p=this.rules.block.hr.exec(y);if(p)return{type:"hr",raw:V(p[0],`
`)}}blockquote(y){let p=this.rules.block.blockquote.exec(y);if(p){let i=V(p[0],`
`).split(`
`),a="",g="",u=[];while(i.length>0){let f=!1,d=[],b;for(b=0;b<i.length;b++)if(this.rules.other.blockquoteStart.test(i[b]))d.push(i[b]),f=!0;else if(!f)d.push(i[b]);else break;i=i.slice(b);let A=d.join(`
`),h=A.replace(this.rules.other.blockquoteSetextReplace,`
    $1`).replace(this.rules.other.blockquoteSetextReplace2,"");a=a?`${a}
${A}`:A,g=g?`${g}
${h}`:h;let E=this.lexer.state.top;if(this.lexer.state.top=!0,this.lexer.blockTokens(h,u,!0),this.lexer.state.top=E,i.length===0)break;let l=u.at(-1);if(l?.type==="code")break;else if(l?.type==="blockquote"){let H=l,q=H.raw+`
`+i.join(`
`),P=this.blockquote(q);u[u.length-1]=P,a=a.substring(0,a.length-H.raw.length)+P.raw,g=g.substring(0,g.length-H.text.length)+P.text;break}else if(l?.type==="list"){let H=l,q=H.raw+`
`+i.join(`
`),P=this.list(q);u[u.length-1]=P,a=a.substring(0,a.length-l.raw.length)+P.raw,g=g.substring(0,g.length-H.raw.length)+P.raw,i=q.substring(u.at(-1).raw.length).split(`
`);continue}}return{type:"blockquote",raw:a,tokens:u,text:g}}}list(y){let p=this.rules.block.list.exec(y);if(p){let i=p[1].trim(),a=i.length>1,g={type:"list",raw:"",ordered:a,start:a?+i.slice(0,-1):"",loose:!1,items:[]};if(i=a?`\\d{1,9}\\${i.slice(-1)}`:`\\${i}`,this.options.pedantic)i=a?i:"[*+-]";let u=this.rules.other.listItemRegex(i),f=!1;while(y){let b=!1,A="",h="";if(!(p=u.exec(y)))break;if(this.rules.block.hr.test(y))break;A=p[0],y=y.substring(A.length);let E=p[2].split(`
`,1)[0].replace(this.rules.other.listReplaceTabs,(B)=>" ".repeat(3*B.length)),l=y.split(`
`,1)[0],H=!E.trim(),q=0;if(this.options.pedantic)q=2,h=E.trimStart();else if(H)q=p[1].length+1;else q=p[2].search(this.rules.other.nonSpaceChar),q=q>4?1:q,h=E.slice(q),q+=p[1].length;if(H&&this.rules.other.blankLine.test(l))A+=l+`
`,y=y.substring(l.length+1),b=!0;if(!b){let B=this.rules.other.nextBulletRegex(q),py=this.rules.other.hrRegex(q),ay=this.rules.other.fencesBeginRegex(q),iy=this.rules.other.headingBeginRegex(q),Ty=this.rules.other.htmlBeginRegex(q);while(y){let I=y.split(`
`,1)[0],S;if(l=I,this.options.pedantic)l=l.replace(this.rules.other.listReplaceNesting,"  "),S=l;else S=l.replace(this.rules.other.tabCharGlobal,"    ");if(ay.test(l))break;if(iy.test(l))break;if(Ty.test(l))break;if(B.test(l))break;if(py.test(l))break;if(S.search(this.rules.other.nonSpaceChar)>=q||!l.trim())h+=`
`+S.slice(q);else{if(H)break;if(E.replace(this.rules.other.tabCharGlobal,"    ").search(this.rules.other.nonSpaceChar)>=4)break;if(ay.test(E))break;if(iy.test(E))break;if(py.test(E))break;h+=`
`+l}if(!H&&!l.trim())H=!0;A+=I+`
`,y=y.substring(I.length+1),E=S.slice(q)}}if(!g.loose){if(f)g.loose=!0;else if(this.rules.other.doubleBlankLine.test(A))f=!0}let P=null,yy;if(this.options.gfm){if(P=this.rules.other.listIsTask.exec(h),P)yy=P[0]!=="[ ] ",h=h.replace(this.rules.other.listReplaceTask,"")}g.items.push({type:"list_item",raw:A,task:!!P,checked:yy,loose:!1,text:h,tokens:[]}),g.raw+=A}let d=g.items.at(-1);if(d)d.raw=d.raw.trimEnd(),d.text=d.text.trimEnd();else return;g.raw=g.raw.trimEnd();for(let b=0;b<g.items.length;b++)if(this.lexer.state.top=!1,g.items[b].tokens=this.lexer.blockTokens(g.items[b].text,[]),!g.loose){let A=g.items[b].tokens.filter((E)=>E.type==="space"),h=A.length>0&&A.some((E)=>this.rules.other.anyLine.test(E.raw));g.loose=h}if(g.loose)for(let b=0;b<g.items.length;b++)g.items[b].loose=!0;return g}}html(y){let p=this.rules.block.html.exec(y);if(p)return{type:"html",block:!0,raw:p[0],pre:p[1]==="pre"||p[1]==="script"||p[1]==="style",text:p[0]}}def(y){let p=this.rules.block.def.exec(y);if(p){let i=p[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal," "),a=p[2]?p[2].replace(this.rules.other.hrefBrackets,"$1").replace(this.rules.inline.anyPunctuation,"$1"):"",g=p[3]?p[3].substring(1,p[3].length-1).replace(this.rules.inline.anyPunctuation,"$1"):p[3];return{type:"def",tag:i,raw:p[0],href:a,title:g}}}table(y){let p=this.rules.block.table.exec(y);if(!p)return;if(!this.rules.other.tableDelimiter.test(p[2]))return;let i=dy(p[1]),a=p[2].replace(this.rules.other.tableAlignChars,"").split("|"),g=p[3]?.trim()?p[3].replace(this.rules.other.tableRowBlankLine,"").split(`
`):[],u={type:"table",raw:p[0],header:[],align:[],rows:[]};if(i.length!==a.length)return;for(let f of a)if(this.rules.other.tableAlignRight.test(f))u.align.push("right");else if(this.rules.other.tableAlignCenter.test(f))u.align.push("center");else if(this.rules.other.tableAlignLeft.test(f))u.align.push("left");else u.align.push(null);for(let f=0;f<i.length;f++)u.header.push({text:i[f],tokens:this.lexer.inline(i[f]),header:!0,align:u.align[f]});for(let f of g)u.rows.push(dy(f,u.header.length).map((d,b)=>{return{text:d,tokens:this.lexer.inline(d),header:!1,align:u.align[b]}}));return u}lheading(y){let p=this.rules.block.lheading.exec(y);if(p)return{type:"heading",raw:p[0],depth:p[2].charAt(0)==="="?1:2,text:p[1],tokens:this.lexer.inline(p[1])}}paragraph(y){let p=this.rules.block.paragraph.exec(y);if(p){let i=p[1].charAt(p[1].length-1)===`
`?p[1].slice(0,-1):p[1];return{type:"paragraph",raw:p[0],text:i,tokens:this.lexer.inline(i)}}}text(y){let p=this.rules.block.text.exec(y);if(p)return{type:"text",raw:p[0],text:p[0],tokens:this.lexer.inline(p[0])}}escape(y){let p=this.rules.inline.escape.exec(y);if(p)return{type:"escape",raw:p[0],text:p[1]}}tag(y){let p=this.rules.inline.tag.exec(y);if(p){if(!this.lexer.state.inLink&&this.rules.other.startATag.test(p[0]))this.lexer.state.inLink=!0;else if(this.lexer.state.inLink&&this.rules.other.endATag.test(p[0]))this.lexer.state.inLink=!1;if(!this.lexer.state.inRawBlock&&this.rules.other.startPreScriptTag.test(p[0]))this.lexer.state.inRawBlock=!0;else if(this.lexer.state.inRawBlock&&this.rules.other.endPreScriptTag.test(p[0]))this.lexer.state.inRawBlock=!1;return{type:"html",raw:p[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,block:!1,text:p[0]}}}link(y){let p=this.rules.inline.link.exec(y);if(p){let i=p[2].trim();if(!this.options.pedantic&&this.rules.other.startAngleBracket.test(i)){if(!this.rules.other.endAngleBracket.test(i))return;let u=V(i.slice(0,-1),"\\");if((i.length-u.length)%2===0)return}else{let u=hp(p[2],"()");if(u===-2)return;if(u>-1){let d=(p[0].indexOf("!")===0?5:4)+p[1].length+u;p[2]=p[2].substring(0,u),p[0]=p[0].substring(0,d).trim(),p[3]=""}}let a=p[2],g="";if(this.options.pedantic){let u=this.rules.other.pedanticHrefTitle.exec(a);if(u)a=u[1],g=u[3]}else g=p[3]?p[3].slice(1,-1):"";if(a=a.trim(),this.rules.other.startAngleBracket.test(a))if(this.options.pedantic&&!this.rules.other.endAngleBracket.test(i))a=a.slice(1);else a=a.slice(1,-1);return by(p,{href:a?a.replace(this.rules.inline.anyPunctuation,"$1"):a,title:g?g.replace(this.rules.inline.anyPunctuation,"$1"):g},p[0],this.lexer,this.rules)}}reflink(y,p){let i;if((i=this.rules.inline.reflink.exec(y))||(i=this.rules.inline.nolink.exec(y))){let a=(i[2]||i[1]).replace(this.rules.other.multipleSpaceGlobal," "),g=p[a.toLowerCase()];if(!g){let u=i[0].charAt(0);return{type:"text",raw:u,text:u}}return by(i,g,i[0],this.lexer,this.rules)}}emStrong(y,p,i=""){let a=this.rules.inline.emStrongLDelim.exec(y);if(!a)return;if(a[3]&&i.match(this.rules.other.unicodeAlphaNumeric))return;if(!(a[1]||a[2])||!i||this.rules.inline.punctuation.exec(i)){let u=[...a[0]].length-1,f,d,b=u,A=0,h=a[0][0]==="*"?this.rules.inline.emStrongRDelimAst:this.rules.inline.emStrongRDelimUnd;h.lastIndex=0,p=p.slice(-1*y.length+u);while((a=h.exec(p))!=null){if(f=a[1]||a[2]||a[3]||a[4]||a[5]||a[6],!f)continue;if(d=[...f].length,a[3]||a[4]){b+=d;continue}else if(a[5]||a[6]){if(u%3&&!((u+d)%3)){A+=d;continue}}if(b-=d,b>0)continue;d=Math.min(d,d+b+A);let E=[...a[0]][0].length,l=y.slice(0,u+a.index+E+d);if(Math.min(u,d)%2){let q=l.slice(1,-1);return{type:"em",raw:l,text:q,tokens:this.lexer.inlineTokens(q)}}let H=l.slice(2,-2);return{type:"strong",raw:l,text:H,tokens:this.lexer.inlineTokens(H)}}}}codespan(y){let p=this.rules.inline.code.exec(y);if(p){let i=p[2].replace(this.rules.other.newLineCharGlobal," "),a=this.rules.other.nonSpaceChar.test(i),g=this.rules.other.startingSpaceChar.test(i)&&this.rules.other.endingSpaceChar.test(i);if(a&&g)i=i.substring(1,i.length-1);return{type:"codespan",raw:p[0],text:i}}}br(y){let p=this.rules.inline.br.exec(y);if(p)return{type:"br",raw:p[0]}}del(y){let p=this.rules.inline.del.exec(y);if(p)return{type:"del",raw:p[0],text:p[2],tokens:this.lexer.inlineTokens(p[2])}}autolink(y){let p=this.rules.inline.autolink.exec(y);if(p){let i,a;if(p[2]==="@")i=p[1],a="mailto:"+i;else i=p[1],a=i;return{type:"link",raw:p[0],text:i,href:a,tokens:[{type:"text",raw:i,text:i}]}}}url(y){let p;if(p=this.rules.inline.url.exec(y)){let i,a;if(p[2]==="@")i=p[0],a="mailto:"+i;else{let g;do g=p[0],p[0]=this.rules.inline._backpedal.exec(p[0])?.[0]??"";while(g!==p[0]);if(i=p[0],p[1]==="www.")a="http://"+p[0];else a=p[0]}return{type:"link",raw:p[0],text:i,href:a,tokens:[{type:"text",raw:i,text:i}]}}}inlineText(y){let p=this.rules.inline.text.exec(y);if(p){let i=this.lexer.state.inRawBlock;return{type:"text",raw:p[0],text:p[0],escaped:i}}}}class M{tokens;options;state;tokenizer;inlineQueue;constructor(y){this.tokens=[],this.tokens.links=Object.create(null),this.options=y||v,this.options.tokenizer=this.options.tokenizer||new D,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};let p={other:O,block:o.normal,inline:J.normal};if(this.options.pedantic)p.block=o.pedantic,p.inline=J.pedantic;else if(this.options.gfm)if(p.block=o.gfm,this.options.breaks)p.inline=J.breaks;else p.inline=J.gfm;this.tokenizer.rules=p}static get rules(){return{block:o,inline:J}}static lex(y,p){return new M(p).lex(y)}static lexInline(y,p){return new M(p).inlineTokens(y)}lex(y){y=y.replace(O.carriageReturn,`
`),this.blockTokens(y,this.tokens);for(let p=0;p<this.inlineQueue.length;p++){let i=this.inlineQueue[p];this.inlineTokens(i.src,i.tokens)}return this.inlineQueue=[],this.tokens}blockTokens(y,p=[],i=!1){if(this.options.pedantic)y=y.replace(O.tabCharGlobal,"    ").replace(O.spaceLine,"");while(y){let a;if(this.options.extensions?.block?.some((u)=>{if(a=u.call({lexer:this},y,p))return y=y.substring(a.raw.length),p.push(a),!0;return!1}))continue;if(a=this.tokenizer.space(y)){y=y.substring(a.raw.length);let u=p.at(-1);if(a.raw.length===1&&u!==void 0)u.raw+=`
`;else p.push(a);continue}if(a=this.tokenizer.code(y)){y=y.substring(a.raw.length);let u=p.at(-1);if(u?.type==="paragraph"||u?.type==="text")u.raw+=`
`+a.raw,u.text+=`
`+a.text,this.inlineQueue.at(-1).src=u.text;else p.push(a);continue}if(a=this.tokenizer.fences(y)){y=y.substring(a.raw.length),p.push(a);continue}if(a=this.tokenizer.heading(y)){y=y.substring(a.raw.length),p.push(a);continue}if(a=this.tokenizer.hr(y)){y=y.substring(a.raw.length),p.push(a);continue}if(a=this.tokenizer.blockquote(y)){y=y.substring(a.raw.length),p.push(a);continue}if(a=this.tokenizer.list(y)){y=y.substring(a.raw.length),p.push(a);continue}if(a=this.tokenizer.html(y)){y=y.substring(a.raw.length),p.push(a);continue}if(a=this.tokenizer.def(y)){y=y.substring(a.raw.length);let u=p.at(-1);if(u?.type==="paragraph"||u?.type==="text")u.raw+=`
`+a.raw,u.text+=`
`+a.raw,this.inlineQueue.at(-1).src=u.text;else if(!this.tokens.links[a.tag])this.tokens.links[a.tag]={href:a.href,title:a.title};continue}if(a=this.tokenizer.table(y)){y=y.substring(a.raw.length),p.push(a);continue}if(a=this.tokenizer.lheading(y)){y=y.substring(a.raw.length),p.push(a);continue}let g=y;if(this.options.extensions?.startBlock){let u=1/0,f=y.slice(1),d;if(this.options.extensions.startBlock.forEach((b)=>{if(d=b.call({lexer:this},f),typeof d==="number"&&d>=0)u=Math.min(u,d)}),u<1/0&&u>=0)g=y.substring(0,u+1)}if(this.state.top&&(a=this.tokenizer.paragraph(g))){let u=p.at(-1);if(i&&u?.type==="paragraph")u.raw+=`
`+a.raw,u.text+=`
`+a.text,this.inlineQueue.pop(),this.inlineQueue.at(-1).src=u.text;else p.push(a);i=g.length!==y.length,y=y.substring(a.raw.length);continue}if(a=this.tokenizer.text(y)){y=y.substring(a.raw.length);let u=p.at(-1);if(u?.type==="text")u.raw+=`
`+a.raw,u.text+=`
`+a.text,this.inlineQueue.pop(),this.inlineQueue.at(-1).src=u.text;else p.push(a);continue}if(y){let u="Infinite loop on byte: "+y.charCodeAt(0);if(this.options.silent){console.error(u);break}else throw new Error(u)}}return this.state.top=!0,p}inline(y,p=[]){return this.inlineQueue.push({src:y,tokens:p}),p}inlineTokens(y,p=[]){let i=y,a=null;if(this.tokens.links){let f=Object.keys(this.tokens.links);if(f.length>0){while((a=this.tokenizer.rules.inline.reflinkSearch.exec(i))!=null)if(f.includes(a[0].slice(a[0].lastIndexOf("[")+1,-1)))i=i.slice(0,a.index)+"["+"a".repeat(a[0].length-2)+"]"+i.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex)}}while((a=this.tokenizer.rules.inline.anyPunctuation.exec(i))!=null)i=i.slice(0,a.index)+"++"+i.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);while((a=this.tokenizer.rules.inline.blockSkip.exec(i))!=null)i=i.slice(0,a.index)+"["+"a".repeat(a[0].length-2)+"]"+i.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);let g=!1,u="";while(y){if(!g)u="";g=!1;let f;if(this.options.extensions?.inline?.some((b)=>{if(f=b.call({lexer:this},y,p))return y=y.substring(f.raw.length),p.push(f),!0;return!1}))continue;if(f=this.tokenizer.escape(y)){y=y.substring(f.raw.length),p.push(f);continue}if(f=this.tokenizer.tag(y)){y=y.substring(f.raw.length),p.push(f);continue}if(f=this.tokenizer.link(y)){y=y.substring(f.raw.length),p.push(f);continue}if(f=this.tokenizer.reflink(y,this.tokens.links)){y=y.substring(f.raw.length);let b=p.at(-1);if(f.type==="text"&&b?.type==="text")b.raw+=f.raw,b.text+=f.text;else p.push(f);continue}if(f=this.tokenizer.emStrong(y,i,u)){y=y.substring(f.raw.length),p.push(f);continue}if(f=this.tokenizer.codespan(y)){y=y.substring(f.raw.length),p.push(f);continue}if(f=this.tokenizer.br(y)){y=y.substring(f.raw.length),p.push(f);continue}if(f=this.tokenizer.del(y)){y=y.substring(f.raw.length),p.push(f);continue}if(f=this.tokenizer.autolink(y)){y=y.substring(f.raw.length),p.push(f);continue}if(!this.state.inLink&&(f=this.tokenizer.url(y))){y=y.substring(f.raw.length),p.push(f);continue}let d=y;if(this.options.extensions?.startInline){let b=1/0,A=y.slice(1),h;if(this.options.extensions.startInline.forEach((E)=>{if(h=E.call({lexer:this},A),typeof h==="number"&&h>=0)b=Math.min(b,h)}),b<1/0&&b>=0)d=y.substring(0,b+1)}if(f=this.tokenizer.inlineText(d)){if(y=y.substring(f.raw.length),f.raw.slice(-1)!=="_")u=f.raw.slice(-1);g=!0;let b=p.at(-1);if(b?.type==="text")b.raw+=f.raw,b.text+=f.text;else p.push(f);continue}if(y){let b="Infinite loop on byte: "+y.charCodeAt(0);if(this.options.silent){console.error(b);break}else throw new Error(b)}}return p}}class Y{options;parser;constructor(y){this.options=y||v}space(y){return""}code({text:y,lang:p,escaped:i}){let a=(p||"").match(O.notSpaceStart)?.[0],g=y.replace(O.endingNewline,"")+`
`;if(!a)return"<pre><code>"+(i?g:j(g,!0))+`</code></pre>
`;return'<pre><code class="language-'+j(a)+'">'+(i?g:j(g,!0))+`</code></pre>
`}blockquote({tokens:y}){return`<blockquote>
${this.parser.parse(y)}</blockquote>
`}html({text:y}){return y}heading({tokens:y,depth:p}){return`<h${p}>${this.parser.parseInline(y)}</h${p}>
`}hr(y){return`<hr>
`}list(y){let{ordered:p,start:i}=y,a="";for(let f=0;f<y.items.length;f++){let d=y.items[f];a+=this.listitem(d)}let g=p?"ol":"ul",u=p&&i!==1?' start="'+i+'"':"";return"<"+g+u+`>
`+a+"</"+g+`>
`}listitem(y){let p="";if(y.task){let i=this.checkbox({checked:!!y.checked});if(y.loose)if(y.tokens[0]?.type==="paragraph"){if(y.tokens[0].text=i+" "+y.tokens[0].text,y.tokens[0].tokens&&y.tokens[0].tokens.length>0&&y.tokens[0].tokens[0].type==="text")y.tokens[0].tokens[0].text=i+" "+j(y.tokens[0].tokens[0].text),y.tokens[0].tokens[0].escaped=!0}else y.tokens.unshift({type:"text",raw:i+" ",text:i+" ",escaped:!0});else p+=i+" "}return p+=this.parser.parse(y.tokens,!!y.loose),`<li>${p}</li>
`}checkbox({checked:y}){return"<input "+(y?'checked="" ':"")+'disabled="" type="checkbox">'}paragraph({tokens:y}){return`<p>${this.parser.parseInline(y)}</p>
`}table(y){let p="",i="";for(let g=0;g<y.header.length;g++)i+=this.tablecell(y.header[g]);p+=this.tablerow({text:i});let a="";for(let g=0;g<y.rows.length;g++){let u=y.rows[g];i="";for(let f=0;f<u.length;f++)i+=this.tablecell(u[f]);a+=this.tablerow({text:i})}if(a)a=`<tbody>${a}</tbody>`;return`<table>
<thead>
`+p+`</thead>
`+a+`</table>
`}tablerow({text:y}){return`<tr>
${y}</tr>
`}tablecell(y){let p=this.parser.parseInline(y.tokens),i=y.header?"th":"td";return(y.align?`<${i} align="${y.align}">`:`<${i}>`)+p+`</${i}>
`}strong({tokens:y}){return`<strong>${this.parser.parseInline(y)}</strong>`}em({tokens:y}){return`<em>${this.parser.parseInline(y)}</em>`}codespan({text:y}){return`<code>${j(y,!0)}</code>`}br(y){return"<br>"}del({tokens:y}){return`<del>${this.parser.parseInline(y)}</del>`}link({href:y,title:p,tokens:i}){let a=this.parser.parseInline(i),g=fy(y);if(g===null)return a;y=g;let u='<a href="'+y+'"';if(p)u+=' title="'+j(p)+'"';return u+=">"+a+"</a>",u}image({href:y,title:p,text:i,tokens:a}){if(a)i=this.parser.parseInline(a,this.parser.textRenderer);let g=fy(y);if(g===null)return j(i);y=g;let u=`<img src="${y}" alt="${i}"`;if(p)u+=` title="${j(p)}"`;return u+=">",u}text(y){return"tokens"in y&&y.tokens?this.parser.parseInline(y.tokens):("escaped"in y)&&y.escaped?y.text:j(y.text)}}class z{strong({text:y}){return y}em({text:y}){return y}codespan({text:y}){return y}del({text:y}){return y}html({text:y}){return y}text({text:y}){return y}link({text:y}){return""+y}image({text:y}){return""+y}br(){return""}}class ${options;renderer;textRenderer;constructor(y){this.options=y||v,this.options.renderer=this.options.renderer||new Y,this.renderer=this.options.renderer,this.renderer.options=this.options,this.renderer.parser=this,this.textRenderer=new z}static parse(y,p){return new $(p).parse(y)}static parseInline(y,p){return new $(p).parseInline(y)}parse(y,p=!0){let i="";for(let a=0;a<y.length;a++){let g=y[a];if(this.options.extensions?.renderers?.[g.type]){let f=g,d=this.options.extensions.renderers[f.type].call({parser:this},f);if(d!==!1||!["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(f.type)){i+=d||"";continue}}let u=g;switch(u.type){case"space":{i+=this.renderer.space(u);continue}case"hr":{i+=this.renderer.hr(u);continue}case"heading":{i+=this.renderer.heading(u);continue}case"code":{i+=this.renderer.code(u);continue}case"table":{i+=this.renderer.table(u);continue}case"blockquote":{i+=this.renderer.blockquote(u);continue}case"list":{i+=this.renderer.list(u);continue}case"html":{i+=this.renderer.html(u);continue}case"paragraph":{i+=this.renderer.paragraph(u);continue}case"text":{let f=u,d=this.renderer.text(f);while(a+1<y.length&&y[a+1].type==="text")f=y[++a],d+=`
`+this.renderer.text(f);if(p)i+=this.renderer.paragraph({type:"paragraph",raw:d,text:d,tokens:[{type:"text",raw:d,text:d,escaped:!0}]});else i+=d;continue}default:{let f='Token with "'+u.type+'" type was not found.';if(this.options.silent)return console.error(f),"";else throw new Error(f)}}}return i}parseInline(y,p=this.renderer){let i="";for(let a=0;a<y.length;a++){let g=y[a];if(this.options.extensions?.renderers?.[g.type]){let f=this.options.extensions.renderers[g.type].call({parser:this},g);if(f!==!1||!["escape","html","link","image","strong","em","codespan","br","del","text"].includes(g.type)){i+=f||"";continue}}let u=g;switch(u.type){case"escape":{i+=p.text(u);break}case"html":{i+=p.html(u);break}case"link":{i+=p.link(u);break}case"image":{i+=p.image(u);break}case"strong":{i+=p.strong(u);break}case"em":{i+=p.em(u);break}case"codespan":{i+=p.codespan(u);break}case"br":{i+=p.br(u);break}case"del":{i+=p.del(u);break}case"text":{i+=p.text(u);break}default:{let f='Token with "'+u.type+'" type was not found.';if(this.options.silent)return console.error(f),"";else throw new Error(f)}}}return i}}class W{options;block;constructor(y){this.options=y||v}static passThroughHooks=new Set(["preprocess","postprocess","processAllTokens"]);preprocess(y){return y}postprocess(y){return y}processAllTokens(y){return y}provideLexer(){return this.block?M.lex:M.lexInline}provideParser(){return this.block?$.parse:$.parseInline}}class $y{defaults=e();options=this.setOptions;parse=this.parseMarkdown(!0);parseInline=this.parseMarkdown(!1);Parser=$;Renderer=Y;TextRenderer=z;Lexer=M;Tokenizer=D;Hooks=W;constructor(...y){this.use(...y)}walkTokens(y,p){let i=[];for(let a of y)switch(i=i.concat(p.call(this,a)),a.type){case"table":{let g=a;for(let u of g.header)i=i.concat(this.walkTokens(u.tokens,p));for(let u of g.rows)for(let f of u)i=i.concat(this.walkTokens(f.tokens,p));break}case"list":{let g=a;i=i.concat(this.walkTokens(g.items,p));break}default:{let g=a;if(this.defaults.extensions?.childTokens?.[g.type])this.defaults.extensions.childTokens[g.type].forEach((u)=>{let f=g[u].flat(1/0);i=i.concat(this.walkTokens(f,p))});else if(g.tokens)i=i.concat(this.walkTokens(g.tokens,p))}}return i}use(...y){let p=this.defaults.extensions||{renderers:{},childTokens:{}};return y.forEach((i)=>{let a={...i};if(a.async=this.defaults.async||a.async||!1,i.extensions)i.extensions.forEach((g)=>{if(!g.name)throw new Error("extension name required");if("renderer"in g){let u=p.renderers[g.name];if(u)p.renderers[g.name]=function(...f){let d=g.renderer.apply(this,f);if(d===!1)d=u.apply(this,f);return d};else p.renderers[g.name]=g.renderer}if("tokenizer"in g){if(!g.level||g.level!=="block"&&g.level!=="inline")throw new Error("extension level must be 'block' or 'inline'");let u=p[g.level];if(u)u.unshift(g.tokenizer);else p[g.level]=[g.tokenizer];if(g.start){if(g.level==="block")if(p.startBlock)p.startBlock.push(g.start);else p.startBlock=[g.start];else if(g.level==="inline")if(p.startInline)p.startInline.push(g.start);else p.startInline=[g.start]}}if("childTokens"in g&&g.childTokens)p.childTokens[g.name]=g.childTokens}),a.extensions=p;if(i.renderer){let g=this.defaults.renderer||new Y(this.defaults);for(let u in i.renderer){if(!(u in g))throw new Error(`renderer '${u}' does not exist`);if(["options","parser"].includes(u))continue;let f=u,d=i.renderer[f],b=g[f];g[f]=(...A)=>{let h=d.apply(g,A);if(h===!1)h=b.apply(g,A);return h||""}}a.renderer=g}if(i.tokenizer){let g=this.defaults.tokenizer||new D(this.defaults);for(let u in i.tokenizer){if(!(u in g))throw new Error(`tokenizer '${u}' does not exist`);if(["options","rules","lexer"].includes(u))continue;let f=u,d=i.tokenizer[f],b=g[f];g[f]=(...A)=>{let h=d.apply(g,A);if(h===!1)h=b.apply(g,A);return h}}a.tokenizer=g}if(i.hooks){let g=this.defaults.hooks||new W;for(let u in i.hooks){if(!(u in g))throw new Error(`hook '${u}' does not exist`);if(["options","block"].includes(u))continue;let f=u,d=i.hooks[f],b=g[f];if(W.passThroughHooks.has(u))g[f]=(A)=>{if(this.defaults.async)return Promise.resolve(d.call(g,A)).then((E)=>{return b.call(g,E)});let h=d.call(g,A);return b.call(g,h)};else g[f]=(...A)=>{let h=d.apply(g,A);if(h===!1)h=b.apply(g,A);return h}}a.hooks=g}if(i.walkTokens){let g=this.defaults.walkTokens,u=i.walkTokens;a.walkTokens=function(f){let d=[];if(d.push(u.call(this,f)),g)d=d.concat(g.call(this,f));return d}}this.defaults={...this.defaults,...a}}),this}setOptions(y){return this.defaults={...this.defaults,...y},this}lexer(y,p){return M.lex(y,p??this.defaults)}parser(y,p){return $.parse(y,p??this.defaults)}parseMarkdown(y){return(i,a)=>{let g={...a},u={...this.defaults,...g},f=this.onError(!!u.silent,!!u.async);if(this.defaults.async===!0&&g.async===!1)return f(new Error("marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise."));if(typeof i==="undefined"||i===null)return f(new Error("marked(): input parameter is undefined or null"));if(typeof i!=="string")return f(new Error("marked(): input parameter is of type "+Object.prototype.toString.call(i)+", string expected"));if(u.hooks)u.hooks.options=u,u.hooks.block=y;let d=u.hooks?u.hooks.provideLexer():y?M.lex:M.lexInline,b=u.hooks?u.hooks.provideParser():y?$.parse:$.parseInline;if(u.async)return Promise.resolve(u.hooks?u.hooks.preprocess(i):i).then((A)=>d(A,u)).then((A)=>u.hooks?u.hooks.processAllTokens(A):A).then((A)=>u.walkTokens?Promise.all(this.walkTokens(A,u.walkTokens)).then(()=>A):A).then((A)=>b(A,u)).then((A)=>u.hooks?u.hooks.postprocess(A):A).catch(f);try{if(u.hooks)i=u.hooks.preprocess(i);let A=d(i,u);if(u.hooks)A=u.hooks.processAllTokens(A);if(u.walkTokens)this.walkTokens(A,u.walkTokens);let h=b(A,u);if(u.hooks)h=u.hooks.postprocess(h);return h}catch(A){return f(A)}}}onError(y,p){return(i)=>{if(i.message+=`
Please report this to https://github.com/markedjs/marked.`,y){let a="<p>An error occurred:</p><pre>"+j(i.message+"",!0)+"</pre>";if(p)return Promise.resolve(a);return a}if(p)return Promise.reject(i);throw i}}}var U=new $y;function N(y,p){return U.parse(y,p)}N.options=N.setOptions=function(y){return U.setOptions(y),N.defaults=U.defaults,Ay(N.defaults),N};N.getDefaults=e;N.defaults=v;N.use=function(...y){return U.use(...y),N.defaults=U.defaults,Ay(N.defaults),N};N.walkTokens=function(y,p){return U.walkTokens(y,p)};N.parseInline=U.parseInline;N.Parser=$;N.parser=$.parse;N.Renderer=Y;N.TextRenderer=z;N.Lexer=M;N.lexer=M.lex;N.Tokenizer=D;N.Hooks=W;N.parse=N;var{options:qp,setOptions:Hp,use:Op,walkTokens:Pp,parseInline:Mp}=N;var $p=$.parse,jp=M.lex;var jy="# nnn\n\nJackens’ JavaScript helpers.\n\n## Installation\n\n```sh\nbun i @jackens/nnn\n```\n\nor\n\n```sh\nnpm i @jackens/nnn\n```\n\n## Usage\n\n```js\nimport { «something» } from '@jackens/nnn'\n```\n\nor\n\n```js\nimport { «something» } from './node_modules/@jackens/nnn/nnn.js'\n```\n\n## Exports\n\n- `CNode`: The type of arguments of the `c` helper.\n- `CRoot`: The type of arguments of the `c` helper.\n- `EscapeMap`: The type of arguments of the `escapeValues` and `escape` helpers.\n- `HArgs`: The type of arguments of the `h` and `s` helpers.\n- `HArgs1`: The type of arguments of the `h` and `s` helpers.\n- `c`: A simple JS-to-CSS (aka CSS-in-JS) helper.\n- `csvParse`: A tiny helper for CSV parsing.\n- `escape`: A generic helper for escaping `values` by given `escapeMap` (in *TemplateStrings* flavor).\n- `escapeValues`: A generic helper for escaping `values` by given `escapeMap`.\n- `fixTypography`: A helper that implements typographic corrections specific to Polish typography.\n- `h`: A lightweight [HyperScript](https://github.com/hyperhype/hyperscript)-style helper for creating and modifying `HTMLElement`s (see also `s`).\n- `hasOwn`: A replacement for the `in` operator (not to be confused with the `for-in` loop) that works properly.\n- `isArray`: A helper that checks if the given argument is of type `any[]`.\n- `isNumber`: A helper that checks if the given argument is of type `number`.\n- `isRecord`: A helper that checks if the given argument is of type `Partial<Record<PropertyKey, unknown>>`.\n- `isString`: A helper that checks if the given argument is of type `string`.\n- `jsOnParse`: `JSON.parse` with “JavaScript turned on”.\n- `nanolight`: A generic helper for syntax highlighting (see also `nanolightJs`).\n- `nanolightJs`: A helper for highlighting JavaScript (see also `nanolight`).\n- `omit`: A helper that implements TypeScript’s `Omit` utility type (see also `pick`).\n- `pick`: A helper that implements TypeScript’s `Pick` utility type (see also `omit`).\n- `plUral`: A helper for choosing the correct singular and plural.\n- `pro`: A helper that protects calls to nested properties by a `Proxy` that initializes non-existent values with an empty\n- `s`: A lightweight [HyperScript](https://github.com/hyperhype/hyperscript)-style helper for creating and modifying `SVGElement`s (see also `h`).\n- `svgUse`: A convenient shortcut for `s('svg', ['use', { 'xlink:href': '#' + id }], ...args)`.\n- `uuid1`: A helper that generates a UUID v1 identifier (with a creation timestamp).\n\n### CNode\n\n```ts\ntype CNode = {\n    [attributeOrSelector: string]: string | number | CNode | undefined;\n};\n```\n\nThe type of arguments of the `c` helper.\n\n### CRoot\n\n```ts\ntype CRoot = Partial<Record<PropertyKey, CNode>>;\n```\n\nThe type of arguments of the `c` helper.\n\n### EscapeMap\n\n```ts\ntype EscapeMap = Map<unknown, (value?: unknown) => string>;\n```\n\nThe type of arguments of the `escapeValues` and `escape` helpers.\n\n### HArgs\n\n```ts\ntype HArgs = [string | Node, ...HArgs1[]];\n```\n\nThe type of arguments of the `h` and `s` helpers.\n\n### HArgs1\n\n```ts\ntype HArgs1 = Partial<Record<PropertyKey, unknown>> | null | undefined | Node | string | number | HArgs;\n```\n\nThe type of arguments of the `h` and `s` helpers.\n\n### c\n\n```ts\nconst c: (root: CRoot, splitter?: string) => string;\n```\n\nA simple JS-to-CSS (aka CSS-in-JS) helper.\n\nThe `root` parameter provides a hierarchical description of CSS rules.\n\n- Keys of sub-objects whose values are NOT objects are treated as CSS attribute, and values are treated as values of those CSS attributes; the concatenation of keys of all parent objects is a CSS rule.\n- All keys ignore the part starting with a splitter (default: `$$`) sign until the end of the key (e.g. `src$$1` → `src`, `@font-face$$1` → `@font-face`).\n- In keys specifying CSS attribute, all uppercase letters are replaced by lowercase letters with an additional `-` character preceding them (e.g. `fontFamily` → `font-family`).\n- Commas in keys that makes a CSS rule cause it to “split” and create separate rules for each part (e.g. `{div:{margin:1,'.a,.b,.c':{margin:2}}}` → `div{margin:1}div.a,div.b,div.c{margin:2}`).\n- Top-level keys that begin with `@` are not concatenated with sub-object keys.\n\n#### Usage Examples\n\n```ts\nconst actual = c({\n  a: {\n    color: 'red',\n    margin: 1,\n    '.c': { margin: 2, padding: 2 },\n    padding: 1\n  }\n})\n\nconst expected = `\na{\n  color:red;\n  margin:1\n}\na.c{\n  margin:2;\n  padding:2\n}\na{\n  padding:1\n}`.replace(/\\n\\s*/g, '')\n\nexpect(actual).to.deep.equal(expected)\n```\n\n```ts\nconst actual = c({\n  a: {\n    '.b': {\n      color: 'red',\n      margin: 1,\n      '.c': { margin: 2, padding: 2 },\n      padding: 1\n    }\n  }\n})\n\nconst expected = `\na.b{\n  color:red;\n  margin:1\n}\na.b.c{\n  margin:2;\n  padding:2\n}\na.b{\n  padding:1\n}`.replace(/\\n\\s*/g, '')\n\nexpect(actual).to.deep.equal(expected)\n```\n\n```ts\nconst actual = c({\n  '@font-face$$1': {\n    fontFamily: 'Jackens',\n    src$$1: 'url(otf/jackens.otf)',\n    src$$2: \"url(otf/jackens.otf) format('opentype'),\" +\n      \"url(svg/jackens.svg) format('svg')\",\n    fontWeight: 'normal',\n    fontStyle: 'normal'\n  },\n  '@font-face$$2': {\n    fontFamily: 'C64',\n    src: 'url(fonts/C64_Pro_Mono-STYLE.woff)'\n  },\n  '@keyframes spin': {\n    '0%': { transform: 'rotate(0deg)' },\n    '100%': { transform: 'rotate(360deg)' }\n  },\n  div: {\n    border: 'solid red 1px',\n    '.c1': { 'background-color': '#000' },\n    ' .c1': { backgroundColor: 'black' },\n    '.c2': { backgroundColor: 'rgb(0,0,0)' }\n  },\n  '@media(min-width:200px)': {\n    div: { margin: 0, padding: 0 },\n    span: { color: '#000' }\n  }\n})\n\nconst expected = `\n@font-face{\n  font-family:Jackens;\n  src:url(otf/jackens.otf);\n  src:url(otf/jackens.otf) format('opentype'),url(svg/jackens.svg) format('svg');\n  font-weight:normal;\n  font-style:normal\n}\n@font-face{\n  font-family:C64;\n  src:url(fonts/C64_Pro_Mono-STYLE.woff)\n}\n@keyframes spin{\n  0%{\n    transform:rotate(0deg)\n  }\n  100%{\n    transform:rotate(360deg)\n  }\n}\ndiv{\n  border:solid red 1px\n}\ndiv.c1{\n  background-color:#000\n}\ndiv .c1{\n  background-color:black\n}\ndiv.c2{\n  background-color:rgb(0,0,0)\n}\n@media(min-width:200px){\n  div{\n    margin:0;\n    padding:0\n  }\n  span{\n    color:#000\n  }\n}`.replace(/\\n\\s*/g, '')\n\nexpect(actual).to.deep.equal(expected)\n```\n\n```ts\nconst actual = c({\n  a: {\n    '.b,.c': {\n      margin: 1,\n      '.d': {\n        margin: 2\n      }\n    }\n  }\n})\n\nconst expected = `\na.b,a.c{\n  margin:1\n}\na.b.d,a.c.d{\n  margin:2\n}`.replace(/\\n\\s*/g, '')\n\nexpect(actual).to.deep.equal(expected)\n```\n\n```ts\nconst actual = c({\n  '.b,.c': {\n    margin: 1,\n    '.d': {\n      margin: 2\n    }\n  }\n})\n\nconst expected = `\n.b,.c{\n  margin:1\n}\n.b.d,.c.d{\n  margin:2\n}`.replace(/\\n\\s*/g, '')\n\nexpect(actual).to.deep.equal(expected)\n```\n\n```ts\nconst actual = c({\n  '.a,.b': {\n    margin: 1,\n    '.c,.d': {\n      margin: 2\n    }\n  }\n})\n\nconst expected = `\n.a,.b{\n  margin:1\n}\n.a.c,.a.d,.b.c,.b.d{\n  margin:2\n}`.replace(/\\n\\s*/g, '')\n\nexpect(actual).to.deep.equal(expected)\n```\n\n### csvParse\n\n```ts\nconst csvParse: {\n    (text: string): Partial<Array<Partial<Record<PropertyKey, string>>>>;\n    <HeaderTrue extends {\n        header: true;\n    }>(text: string, config: HeaderTrue): Partial<Array<Partial<Record<PropertyKey, string>>>>;\n    <HeaderFalse extends {\n        header: false;\n    }>(text: string, config: HeaderFalse): Partial<Array<Partial<Array<string>>>>;\n    (text: string, config: Partial<{\n        header: boolean;\n        separator: string;\n    }>): Partial<Array<Partial<Record<PropertyKey, string>>>> | Partial<Array<Partial<Array<string>>>>;\n};\n```\n\nA tiny helper for CSV parsing.\n\nOptions:\n- `header`: flag indicating that the parsed CSV has a header row (default: `true`)\n- `separator`: field separator (default: `','`)\n\n#### Usage Examples\n\n```ts\nconst text = `\"aaa\n\"\"aaa\"\"\naaa\",bbb, \"ccc,ccc\"\n\"xxx,xxx\", \"yyy\nyyy\",zzz\n 42 , \"42\" , 17\n\n`\nexpect(csvParse(text, { header: false })).to.deep.equal([\n  ['aaa\\n\"aaa\"\\naaa', 'bbb', 'ccc,ccc'],\n  ['xxx,xxx', 'yyy\\nyyy', 'zzz'],\n  [' 42 ', '42', ' 17']\n])\n\nexpect(csvParse(text)).to.deep.equal([{\n  'aaa\\n\"aaa\"\\naaa': 'xxx,xxx',\n  bbb: 'yyy\\nyyy',\n  'ccc,ccc': 'zzz'\n}, {\n  'aaa\\n\"aaa\"\\naaa': ' 42 ',\n  bbb: '42',\n  'ccc,ccc': ' 17'\n}])\n```\n\n### escape\n\n```ts\nconst escape: (escapeMap: EscapeMap, template: TemplateStringsArray, ...values: Partial<Array<unknown>>) => string;\n```\n\nA generic helper for escaping `values` by given `escapeMap` (in *TemplateStrings* flavor).\n\n#### Usage Examples\n\n```ts\nconst escapeMap: EscapeMap = new Map([\n  [undefined, () => 'NULL'],\n  [Array, (values: Partial<Array<unknown>>) => escapeValues(escapeMap, values).join(', ')],\n  [Boolean, (value: boolean) => `b'${+value}'`],\n  [Date, (value: Date) => `'${value.toISOString().replace(/^(.+)T(.+)\\..*$/, '$1 $2')}'`],\n  [Number, (value: number) => `${value}`],\n  [String, (value: string) => `'${value.replace(/'/g, \"''\")}'`]\n])\n\nconst sql = escape.bind(null, escapeMap)\n\nconst actual = sql`\n  SELECT *\n  FROM table_name\n  WHERE column_name IN (${[true, null, undefined, 42, '42', \"4'2\", /42/, new Date(323325000000)]})`\n\nconst expected = `\n  SELECT *\n  FROM table_name\n  WHERE column_name IN (b'1', NULL, NULL, 42, '42', '4''2', NULL, '1980-03-31 04:30:00')`\n\nexpect(actual).to.deep.equal(expected)\n```\n\n### escapeValues\n\n```ts\nconst escapeValues: (escapeMap: EscapeMap, values: Partial<Array<unknown>>) => Partial<Array<string>>;\n```\n\nA generic helper for escaping `values` by given `escapeMap`.\n\n### fixTypography\n\n```ts\nconst fixTypography: (node: Node) => void;\n```\n\nA helper that implements typographic corrections specific to Polish typography.\n\n#### Usage Examples\n\n```ts\nconst p = h('p', 'Pchnąć w tę łódź jeża lub ośm skrzyń fig (zob. https://pl.wikipedia.org/wiki/Pangram).')\n\nfixTypography(p)\n\nexpect(p.innerHTML).to.deep.equal(\n  'Pchnąć <span style=\"white-space:nowrap\">w </span>tę łódź jeża lub ośm skrzyń fig ' +\n  '(zob. https://\\u200Bpl.\\u200Bwikipedia.\\u200Borg/\\u200Bwiki/\\u200BPangram).')\n```\n\n### h\n\n```ts\nconst h: {\n    <T extends keyof HTMLElementTagNameMap>(tag: T, ...args1: Partial<Array<HArgs1>>): HTMLElementTagNameMap[T];\n    <N extends Node>(node: N, ...args1: Partial<Array<HArgs1>>): N;\n    (tagOrNode: string | Node, ...args1: Partial<Array<HArgs1>>): Node;\n};\n```\n\nA lightweight [HyperScript](https://github.com/hyperhype/hyperscript)-style helper for creating and modifying `HTMLElement`s (see also `s`).\n\n- The first argument of type `string` specifies the tag of the element to be created.\n- The first argument of type `Node` specifies the element to be modified.\n- All other arguments of type `Partial<Record<PropertyKey, unknown>>` are mappings of attributes and properties. Keys starting with `$` specify *properties* (without the leading `$`) to be set on the element being created or modified. (Note that `$` is not a valid attribute name character.) All other keys specify *attributes* to be set by `setAttribute`. An attribute equal to `false` causes the attribute to be removed by `removeAttribute`.\n- All other arguments of type `null` or `undefined` are simply ignored.\n- All other arguments of type `Node` are appended to the element being created or modified.\n- All other arguments of type `string`/`number` are converted to `Text` nodes and appended to the element being created or modified.\n- All other arguments of type `HArgs` are passed to `h` and the results are appended to the element being created or modified.\n\n#### Usage Examples\n\n```ts\nconst b = h('b')\n\nexpect(b.outerHTML).to.deep.equal('<b></b>')\n\nconst i = h('i', 'text')\n\nh(b, i)\n\nexpect(i.outerHTML).to.deep.equal('<i>text</i>')\nexpect(b.outerHTML).to.deep.equal('<b><i>text</i></b>')\n\nh(i, { $className: 'some class' })\n\nexpect(i.outerHTML).to.deep.equal('<i class=\"some class\">text</i>')\nexpect(b.outerHTML).to.deep.equal('<b><i class=\"some class\">text</i></b>')\n```\n\n```ts\nexpect(h('span', 'text').outerHTML).to.deep.equal('<span>text</span>')\nexpect(h('span', { $innerText: 'text' }).outerHTML).to.deep.equal('<span>text</span>')\n```\n\n```ts\nexpect(h('div', { style: 'margin:0;padding:0' }).outerHTML)\n  .to.deep.equal('<div style=\"margin:0;padding:0\"></div>')\nexpect(h('div', { $style: 'margin:0;padding:0' }).outerHTML)\n  .to.deep.equal('<div style=\"margin: 0px; padding: 0px;\"></div>')\nexpect(h('div', { $style: { margin: 0, padding: 0 } }).outerHTML)\n  .to.deep.equal('<div style=\"margin: 0px; padding: 0px;\"></div>')\n```\n\n```ts\nconst input1 = h('input', { value: 42 })\nconst input2 = h('input', { $value: '42' })\n\nexpect(input1.value).to.deep.equal('42')\nexpect(input2.value).to.deep.equal('42')\n\nexpect(input1.outerHTML).to.deep.equal('<input value=\"42\">')\nexpect(input2.outerHTML).to.deep.equal('<input>')\n\nconst checkbox1 = h('input', { type: 'checkbox', checked: true })\nconst checkbox2 = h('input', { type: 'checkbox', $checked: true })\n\nexpect(checkbox1.checked).to.be.true\nexpect(checkbox2.checked).to.be.true\n\nexpect(checkbox1.outerHTML).to.deep.equal('<input type=\"checkbox\" checked=\"\">')\nexpect(checkbox2.outerHTML).to.deep.equal('<input type=\"checkbox\">')\n```\n\n```ts\nconst div = h('div')\n\nexpect(div.key).to.be.undefined\n\nh(div, { $key: { one: 1 } })\n\nexpect(div.key).to.deep.equal({ one: 1 })\n\nh(div, { $key: { two: 2 } })\n\nexpect(div.key).to.deep.equal({ one: 1, two: 2 })\n```\n\n### hasOwn\n\n```ts\nconst hasOwn: (ref: unknown, key: unknown) => boolean;\n```\n\nA replacement for the `in` operator (not to be confused with the `for-in` loop) that works properly.\n\n#### Usage Examples\n\n```ts\nconst obj = { 42: null, null: 'k,e,y', 'k,e,y': 42 }\n\nexpect(42 in obj).to.be.true\nexpect(hasOwn(obj, 42)).to.be.true\n\nexpect('42' in obj).to.be.true\nexpect(hasOwn(obj, '42')).to.be.true\n\nexpect('null' in obj).to.be.true\nexpect(hasOwn(obj, 'null')).to.be.true\n\nexpect(null in obj).to.be.true\nexpect(hasOwn(obj, null)).to.be.true\n\nexpect('k,e,y' in obj).to.be.true\nexpect(hasOwn(obj, 'k,e,y')).to.be.true\n\nexpect(['k', 'e', 'y'] in obj).to.be.true\nexpect(hasOwn(obj, ['k', 'e', 'y'])).to.be.true\n\nexpect('toString' in obj).to.be.true\nexpect(hasOwn(obj, 'toString')).to.be.false\n\nexpect(() => 'key' in null).to.throw\nexpect(hasOwn(null, 'key')).to.be.false\n\nexpect(() => 'key' in undefined).to.throw\nexpect(hasOwn(undefined, 'key')).to.be.false\n```\n\n### isArray\n\n```ts\nconst isArray: (arg: any) => arg is any[];\n```\n\nA helper that checks if the given argument is of type `any[]`.\n\n### isNumber\n\n```ts\nconst isNumber: (arg: any) => arg is number;\n```\n\nA helper that checks if the given argument is of type `number`.\n\n### isRecord\n\n```ts\nconst isRecord: (arg: any) => arg is Partial<Record<PropertyKey, unknown>>;\n```\n\nA helper that checks if the given argument is of type `Partial<Record<PropertyKey, unknown>>`.\n\n### isString\n\n```ts\nconst isString: (arg: any) => arg is string;\n```\n\nA helper that checks if the given argument is of type `string`.\n\n### jsOnParse\n\n```ts\nconst jsOnParse: (handlers: Partial<Record<PropertyKey, Function>>, text: string) => any;\n```\n\n`JSON.parse` with “JavaScript turned on”.\n\nObjects having *exactly* one property which is present in the `handlers` map, i.e. objects of the form:\n\n```js\n{ \"«handlerName»\": [«params»] }\n```\n\nare replaced by the result of call\n\n```js\nhandlers['«handlerName»'](...«params»)\n```\n\n#### Usage Examples\n\n```ts\nconst handlers = {\n  $hello: (name: string) => `Hello ${name}!`,\n  $foo: () => 'bar'\n}\n\nconst actual = jsOnParse(handlers, `[\n  {\n    \"$hello\": [\"World\"]\n  },\n  {\n    \"nested\": {\n      \"$hello\": [\"nested World\"]\n    },\n    \"one\": 1,\n    \"two\": 2\n  },\n  {\n    \"$foo\": []\n  },\n  {\n    \"$foo\": [\"The parent object does not have exactly one property!\"],\n    \"one\": 1,\n    \"two\": 2\n  }\n]`)\n\nconst expected = [\n  'Hello World!',\n  {\n    nested: 'Hello nested World!',\n    one: 1,\n    two: 2\n  },\n  'bar',\n  {\n    $foo: ['The parent object does not have exactly one property!'],\n    one: 1,\n    two: 2\n  }\n]\n\nexpect(actual).to.deep.equal(expected)\n```\n\n### nanolight\n\n```ts\nconst nanolight: (pattern: RegExp, highlighters: Partial<Array<(chunk: string, index: number) => HArgs1>>, code: string) => HArgs1[];\n```\n\nA generic helper for syntax highlighting (see also `nanolightJs`).\n\n### nanolightJs\n\n```ts\nconst nanolightJs: (code: string) => HArgs1[];\n```\n\nA helper for highlighting JavaScript (see also `nanolight`).\n\n#### Usage Examples\n\n```ts\nconst codeJs = 'const answerToLifeTheUniverseAndEverything = 42'\n\nexpect(nanolightJs(codeJs)).to.deep.equal([\n  ['span', { class: 'keyword' }, 'const'],\n  ' ',\n  ['span', { class: 'literal' }, 'answerToLifeTheUniverseAndEverything'],\n  ' ',\n  ['span', { class: 'operator' }, '='],\n  ' ',\n  ['span', { class: 'number' }, '42']\n])\n```\n\n### omit\n\n```ts\nconst omit: <T extends Partial<Record<PropertyKey, unknown>>, K extends Array<keyof T>>(obj: Partial<Record<PropertyKey, unknown>>, keys: Partial<Array<unknown>>) => Omit<T, K[number]>;\n```\n\nA helper that implements TypeScript’s `Omit` utility type (see also `pick`).\n\n#### Usage Examples\n\n```ts\nconst obj = { a: 42, b: '42', c: 17 }\n\nexpect(omit(obj, ['c'])).to.deep.equal({ a: 42, b: '42' })\n```\n\n### pick\n\n```ts\nconst pick: <T extends Partial<Record<PropertyKey, unknown>>, K extends Array<keyof T>>(obj: Partial<Record<PropertyKey, unknown>>, keys: Partial<Array<unknown>>) => Pick<T, K[number]>;\n```\n\nA helper that implements TypeScript’s `Pick` utility type (see also `omit`).\n\n#### Usage Examples\n\n```ts\nconst obj = { a: 42, b: '42', c: 17 }\n\nexpect(pick(obj, ['a', 'b'])).to.deep.equal({ a: 42, b: '42' })\n```\n\n### plUral\n\n```ts\nconst plUral: (singular: string, plural2: string, plural5: string, value: number) => string;\n```\n\nA helper for choosing the correct singular and plural.\n\n#### Usage Examples\n\n```ts\nconst auto = plUral.bind(null, 'auto', 'auta', 'aut')\n\nexpect(auto(0)).to.deep.equal('aut')\nexpect(auto(1)).to.deep.equal('auto')\nexpect(auto(17)).to.deep.equal('aut')\nexpect(auto(42)).to.deep.equal('auta')\n\nconst car = plUral.bind(null, 'car', 'cars', 'cars')\n\nexpect(car(0)).to.deep.equal('cars')\nexpect(car(1)).to.deep.equal('car')\nexpect(car(17)).to.deep.equal('cars')\nexpect(car(42)).to.deep.equal('cars')\n```\n\n### pro\n\n```ts\nconst pro: (ref: unknown) => any;\n```\n\nA helper that protects calls to nested properties by a `Proxy` that initializes non-existent values with an empty\nobject.\n\n#### Usage Examples\n\n```ts\nconst ref = {}\n\npro(ref).one.two[3][4] = 1234\n\nexpect(ref).to.deep.equal({ one: { two: { 3: { 4: 1234 } } } })\n\npro(ref).one.two.tree = 123\n\nexpect(ref).to.deep.equal({ one: { two: { 3: { 4: 1234 }, tree: 123 } } })\n\npro(ref).one.two = undefined\n\nexpect(ref).to.deep.equal({ one: { two: undefined } })\n\ndelete pro(ref).one.two\n\nexpect(ref).to.deep.equal({ one: {} })\n\npro(ref).one.two.three.four\n\nexpect(ref).to.deep.equal({ one: { two: { three: { four: {} } } } })\n\npro(ref).one.two.three.four = 1234\n\nexpect(ref).to.deep.equal({ one: { two: { three: { four: 1234 } } } })\n```\n\n### s\n\n```ts\nconst s: {\n    <T extends keyof SVGElementTagNameMap>(tag: T, ...args1: Partial<Array<HArgs1>>): SVGElementTagNameMap[T];\n    <N extends Node>(node: N, ...args1: Partial<Array<HArgs1>>): N;\n    (tagOrNode: string | Node, ...args1: Partial<Array<HArgs1>>): Node;\n};\n```\n\nA lightweight [HyperScript](https://github.com/hyperhype/hyperscript)-style helper for creating and modifying `SVGElement`s (see also `h`).\n\n- The first argument of type `string` specifies the tag of the element to be created.\n- The first argument of type `Node` specifies the element to be modified.\n- All other arguments of type `Partial<Record<PropertyKey, unknown>>` are mappings of attributes and properties. Keys starting with `$` specify *properties* (without the leading `$`) to be set on the element being created or modified. (Note that `$` is not a valid attribute name character.) All other keys specify *attributes* to be set by `setAttributeNS`. An attribute equal to `false` causes the attribute to be removed by `removeAttributeNS`.\n- All other arguments of type `null` or `undefined` are simply ignored.\n- All other arguments of type `Node` are appended to the element being created or modified.\n- All other arguments of type `string`/`number` are converted to `Text` nodes and appended to the element being created or modified.\n- All other arguments of type `HArgs` are passed to `s` and the results are appended to the element being created or modified.\n\n### svgUse\n\n```ts\nconst svgUse: (id: string, ...args: Partial<Array<HArgs1>>) => SVGSVGElement;\n```\n\nA convenient shortcut for `s('svg', ['use', { 'xlink:href': '#' + id }], ...args)`.\n\n### uuid1\n\n```ts\nconst uuid1: (date?: Date, node?: string) => string;\n```\n\nA helper that generates a UUID v1 identifier (with a creation timestamp).\n\n- The optional `node` parameter should have the format `/^[0123456789abcdef]+$/`. Its value will be trimmed to last 12 characters and left padded with zeros.\n\n#### Usage Examples\n\n```ts\nfor (let i = 1; i <= 22136; ++i) {\n  const uuid = uuid1()\n\n  i === 1 && expect(uuid.split('-')[3]).to.deep.equal('8001')\n  i === 4095 && expect(uuid.split('-')[3]).to.deep.equal('8fff')\n  i === 4096 && expect(uuid.split('-')[3]).to.deep.equal('9000')\n  i === 9029 && expect(uuid.split('-')[3]).to.deep.equal('a345')\n  i === 13398 && expect(uuid.split('-')[3]).to.deep.equal('b456')\n  i === 16384 && expect(uuid.split('-')[3]).to.deep.equal('8000')\n  i === 17767 && expect(uuid.split('-')[3]).to.deep.equal('8567')\n}\n```\n\n```ts\nexpect(uuid1(new Date(), '000123456789abc').split('-')[4]).to.deep.equal('123456789abc')\nexpect(uuid1(new Date(), '123456789').split('-')[4]).to.deep.equal('000123456789')\n```\n\n```ts\nexpect(uuid1(new Date(323325000000)).startsWith('c1399400-9a71-11bd')).to.be.true\n```\n\n## Why Partial\\<Array\\> and Partial\\<Record\\>\n\nConsider the following code snippet:\n\n```ts\nconst arr = ['one', 'two', 'three'] // type: string[]\nconst arrAt42 = arr[42] // type: string\n\narrAt42.toUpperCase() // 👎 allowed by TypeScript\n```\n\nTypeScript allows `arrAt42.toUpperCase()`,\nwhich causes a <code class=\"log\">TypeError: undefined is not an object</code>.\nThe variable `arr` should be of type `Partial<Array<string>>`:\n\n```ts\nconst arr: Partial<Array<string>> = ['one', 'two', 'three']\nconst arrAt42 = arr[42] // type: string | undefined\n\narrAt42.toUpperCase()  // 👍 forbidden by TypeScript\n```\n\nNow `arrAt42.toUpperCase()` is forbidden by TypeScript (<code class=\"log\">'arrAt42' is possibly undefined</code>).\n\nSimilarly for the type `Record`:\n\n```ts\nconst rec = Object.fromEntries(['one', 'two', 'three'].map((k, i) => [k, i])) // type: Record<string, number>\nconst { tree } = rec // type: number\n\ntree.toFixed() // 👎 allowed by TypeScript\n```\n\nTypeScript allows `tree.toFixed()`, which causes a <code class=\"log\">TypeError: undefined is not an object</code>.\nThe variable `rec` should be of type `Partial<Record<PropertyKey, number>>`:\n\n```ts\nconst rec: Partial<Record<PropertyKey, number>> =\n  Object.fromEntries(['one', 'two', 'three'].map((k, i) => [k, i]))\nconst { tree } = rec // type: number | undefined\n\ntree.toFixed() // 👍 forbidden by TypeScript\n```\n\nNow `tree.toFixed()` is forbidden by TypeScript (<code class=\"log\">'tree' is possibly undefined</code>).\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2016+ Jackens\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n";var R=Array.isArray,Uy=(y)=>typeof y==="number",s=(y)=>typeof y==="object"&&y!=null&&!R(y),K=(y)=>typeof y==="string";var vy=(y,p,i,a)=>{let g=[[y,p]];while(g.length>0){let[u,f]=g.shift()??[];if(u==null||f==null)continue;if(R(u))i.push(f,f!==""?"{":"",u.join(";"),f!==""?"}":"");else{let d=[],b=[],A=!1;for(let h in u){let E=u[h];if(K(E)||Uy(E)){if(!A)A=!0,b=[],d.push([b,f]);b.push(`${a(h).replace(/([A-Z])/g,(l,H)=>"-"+H.toLowerCase())}:${E}`)}else if(E!=null){A=!1;let l=[],H=h.split(",");f.split(",").forEach((q)=>H.forEach((P)=>l.push(q+P))),d.push([E,l.join(",")])}}g.unshift(...d)}}},Ry=(y,p="$$")=>{let i=(g)=>g.split(p)[0],a=[];for(let g in y){let u=y[g];if(u!=null)if(g[0]==="@")a.push(i(g)+"{"),vy(u,"",a,i),a.push("}");else vy(u,i(g),a,i)}return a.join("")};var Np={xlink:"http://www.w3.org/1999/xlink"},Ky=(y)=>{let p=y==null?(a)=>document.createElement(a):(a)=>document.createElementNS(y,a),i=(a,...g)=>{let u=K(a)?p(a):a;return g.forEach((f)=>{let d=null;if(f instanceof Node)d=f;else if(R(f))d=i(...f);else if(s(f))for(let b in f){let A=f[b];if(b[0]==="$"){let h=b.slice(1);if(s(A))u[h]=u[h]??{},Object.assign(u[h],A);else u[h]=A}else if(u instanceof Element){let h=b.indexOf(":");if(h>=0){let E=Np[b.slice(0,h)];if(E!=null){let l=b.slice(h+1);if(A===!0)u.setAttributeNS(E,l,"");else if(A===!1)u.removeAttributeNS(E,l);else u.setAttributeNS(E,l,A)}}else if(A===!0)u.setAttribute(b,"");else if(A===!1)u.removeAttribute(b);else u.setAttribute(b,""+A)}}else if(f!=null)d=document.createTextNode(f);if(d!=null)u.appendChild(d)}),u};return i},F=Ky(),n=Ky("http://www.w3.org/2000/svg"),Fy=(y,...p)=>n("svg",["use",{"xlink:href":"#"+y}],...p);var Sy=(y,p,i)=>{let a=[];return i.split(y).forEach((g,u)=>{if(g!=null&&g!=="")u%=p.length,a.push(p[u](g,u))}),a};var Jy=Sy.bind(0,/('.*?'|".*?"|`[\s\S]*?`)|(\/\/.*?\n|\/\*[\s\S]*?\*\/)|(any|bigint|break|boolean|case|catch|class|const|continue|debugger|default|delete|do|else|eval|export|extends|false|finally|for|from|function|goto|if|import|in|instanceof|is|keyof|let|NaN|new|number|null|package|return|string|super|switch|symbol|this|throw|true|try|type|typeof|undefined|unknown|var|void|while|with|yield)(?!\w)|([<>=.?:&|!^~*/%+-])|(0x[\dabcdef_]+|0o[01234567_]+|0b[01_]+|\d[\d_]*(?:\.[\d_]+)?(?:e[+-]?[\d_]+)?)|([$\w]+)(?=\()|([$\wąćęłńóśżźĄĆĘŁŃÓŚŻŹ]+)/,[(y)=>y,(y)=>["span",{class:"string"},y],(y)=>["span",{class:"comment"},y],(y)=>["span",{class:"keyword"},y],(y)=>["span",{class:"operator"},y],(y)=>["span",{class:"number"},y],(y)=>["span",{class:"function"},y],(y)=>["span",{class:"literal"},y]]);document.title="nnn • Documentation";var Vy=[],k=F("div",{$innerHTML:N(jy)});Array.from(k.querySelectorAll("h1,h2,h3,h4")).forEach((y,p,i)=>{let a=y.innerText,g=a.replace(/\W+/g,"-").replace(/-+$/g,"")+(a==="Usage Examples"?"-"+i[p-1]?.innerText:"");if(y.tagName==="H3")Vy.push(g);y.parentNode?.insertBefore(F("a",{id:g,name:g}),y),F(y,["a",{href:"#"+g},Fy("link")])});var wp=JSON.stringify([["span",{class:"keyword"},"const"]," "]);for(let y of k.querySelectorAll("code"))if(["","language-js","language-ts"].includes(y.className))F(y,{$innerText:""},...Jy(y.innerText).map((p,i,a)=>{if(R(p)){let[,g,u]=p;if(K(u)&&Vy.includes(u)){let f=g?.class,d=JSON.stringify(a[i+1]),b=JSON.stringify(a.slice(i-2,i));if(K(f)&&["function","keyword","literal"].includes(f)&&(u.length>2||d==null||d.startsWith('"(')||b===wp))p[2]=["a",{href:"#"+u},u]}}return p}));F(document.body,["style",Ry({body:{padding:"20px"},"code>span.":{string:{color:"var(--pico-ins-color)"},comment:{color:"color-mix(in srgb,var(--pico-color),#000 40%)"},keyword:{color:"var(--pico-del-color)"},operator:{color:"color-mix(in srgb,var(--pico-del-color),#fff 20%)"},number:{color:"color-mix(in srgb,var(--pico-ins-color),#fff 30%)"},function:{color:"color-mix(in srgb,var(--pico-primary),#fff 30%)"},literal:{color:"var(--pico-color)"}},"@media only screen and (prefers-color-scheme: light)":{"code>span.":{comment:{color:"color-mix(in srgb,var(--pico-color),#fff 40%)"},operator:{color:"color-mix(in srgb,var(--pico-del-color),#000 20%)"},number:{color:"color-mix(in srgb,var(--pico-ins-color),#000 30%)"},function:{color:"color-mix(in srgb,var(--pico-primary),#000 30%)"}}},"h1,h2,h3,h4":{">a":{marginLeft:"0.4em",">svg":{width:"0.7em",height:"0.7em"}}}})],["div",{$style:{display:"none"}},n("symbol",{viewBox:"0 0 5.292 5.292",id:"link"},["path",{d:"M.38 3.03a1.328 1.328 0 0 0 .01 1.871 1.328 1.328 0 0 0 1.871.01l1.104-1.103a1.328 1.328 0 0 0-.218-2.04 29.37 29.37 0 0 0-.497.502l-.016.022c.079.031.154.08.22.145.25.25.25.63.01.87L1.76 4.41a.605.605 0 0 1-.868-.01.605.605 0 0 1-.01-.869l.453-.453a1.747 1.747 0 0 1-.142-.86Zm1.944-1.443-.133.138.174-.178zm-.214.222a.77.77 0 0 0-.17.307.909.909 0 0 1 .173-.31zm-.184-.324a1.328 1.328 0 0 0 .219 2.041 4.71 4.71 0 0 0 .487-.537.651.651 0 0 1-.194-.135.605.605 0 0 1-.011-.868L3.531.88c.24-.24.62-.239.869.01.25.25.25.629.01.87l-.448.448c.115.277.156.583.12.882l.83-.83a1.328 1.328 0 0 0-.01-1.87A1.328 1.328 0 0 0 3.03.38Zm1.37 1.803-.006.01c-.096.142-.2.272-.309.395l.008-.006.01-.009a.9.9 0 0 0 .298-.39"}])],...k.children);if(location.hash!=="")location=location;
